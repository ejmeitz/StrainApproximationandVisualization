function deformedCellArray = strainApproximation(posBoxArray, scaled_s0)

    posBoxCellArray = createGrid(posBoxArray); %organize box elements by row
    deformedCellArray = {};
    
    
    sizeArray = size(posBoxCellArray);
    maxI = sizeArray(1);
    maxJ = sizeArray(2);
    
    maxRowLength = maxJ; %longest row is the num of cols
    longestRowIndex = getLongestRowIndexFromCellArray(posBoxCellArray);
    initialBoxWidth = posBoxCellArray{1,1,1}(3); 
    initialMinX = getMinX(posBoxCellArray(:,:,1));
    initialMaxX = maxRowLength*initialBoxWidth + initialMinX;
    fixedX = 0;
   
    [chosenCircles, threshUp, threshDown] = pickCircles(scaled_s0);
    trackedCircleLocations = trackCircles(scaled_s0, threshUp, threshDown, chosenCircles);
    forceLocation
    
    switch(forceLocation)
        case 1
            fixedX = initialMinX;
            %deformedCellArray = deformLeft(posBoxCellArray, maxRowLength);
        case 2
            fixedX = initialMaxX;
            %deformedCellArray = deformRight(posBoxCellArray, maxRowLength); %just mirror of deformLeft()
        case 3
            fixedX = findFixed(posBoxCellArray(:,:,1),initialMinX, initialMaxX);  
            %deformedCellArray = deformBoth(fixedX, initialMinX, maxRowLength);
        otherwise
    end
    
    
    return
end